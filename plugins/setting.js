// ùöæùö≥ùêÉ
const config = require('../config')
const {cmd , commands} = require('../command')
const os = require("os")

cmd({
    pattern: "settings",
    alias: ["setting"],
    react: "‚öôÔ∏è",
    desc: "settings the bot",
    category: "owner"
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        if (!isOwner) {
            return reply("*_‚õîÔ∏èYou are not the owner_*");
        }

        let desc = `
        
‚ï≠‚îà‚îâ‚öô *x·¥ç·¥Ö  ô·¥è·¥õ s·¥á·¥õ·¥õ…™…¥…¢s* ‚öô‚îâ‚îà‚ïÆ
‚îá
‚îáüíº ·¥°·¥è Ä·¥ã ·¥ç·¥è·¥Ö·¥á : ùôøùöÑùô±ùôªùô∏ùô≤üåé/ùôøùöÅùô∏ùöÖùô∞ùöÉùô¥
‚îáüîä ·¥Ä·¥ú·¥õ·¥è ·¥†·¥è…™·¥Ñ·¥á : ‚ôª ùôæùôΩ/ùôæùôµùôµ
‚îáüìù ·¥Ä·¥ú·¥õ·¥è s·¥õ·¥Ä·¥õ·¥ús : ‚ôª ùôæùôΩ/ùôæùôµùôµ
‚îá‚å® ·¥Ä·¥ú·¥õ·¥è ·¥õ è·¥ò…™…¥…¢ : ‚ôª ùôæùôΩ/ùôæùôµùôµ
‚îáüõ† ·¥Ä·¥ú·¥õ·¥è  Ä·¥á·¥Ä·¥Ö ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö : ‚ôª ùôæùôΩ/ùôæùôµùôµ
‚ï∞‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚ïØ

   üîó  *_·¥Ñ·¥ús·¥õ·¥è·¥ç…™·¥¢·¥á  è·¥è·¥ú Ä s·¥á·¥õ·¥õ…™…¥…¢s_* ‚§µÔ∏è
   
> *‚Ü™ Ä·¥á·¥ò ü è ·¥°…™·¥õ ú ·¥õ ú·¥á …¥·¥ú·¥ç ô·¥á Ä  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥á ü·¥á·¥Ñ·¥õ*

    üîß *·¥è·¥ò·¥õ…™·¥è…¥s ·¥ç·¥á…¥·¥ú* üîß

‚î£‚îÅ *·¥°·¥è Ä·¥ã ·¥ç·¥è·¥Ö·¥á* ‚§µÔ∏è
‚îÉ   ‚î£ 1.1 üîπ ·¥ò·¥ú ô ü…™·¥Ñ ·¥°·¥è Ä·¥ã
‚îÉ   ‚î£ 1.2 üîπ ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á ·¥°·¥è Ä·¥ã

‚î£‚îÅ *·¥Ä·¥ú·¥õ·¥è ·¥†·¥è…™·¥Ñ·¥á* ‚§µÔ∏è
‚îÉ   ‚î£ 2.1 üîä ·¥Ä·¥ú·¥õ·¥è ·¥†·¥è…™·¥Ñ·¥á ·¥è…¥
‚îÉ   ‚îó 2.2 üîï ·¥Ä·¥ú·¥õ·¥è ·¥†·¥è…™·¥Ñ·¥á ·¥è“ì“ì

‚î£‚îÅ *·¥Ä·¥ú·¥õ·¥è s·¥õ·¥Ä·¥õ·¥ús s·¥á·¥á…¥* ‚§µÔ∏è
‚îÉ   ‚î£ 3.1 üëÅ‚Äçüó® ·¥Ä·¥ú·¥õ·¥è  Ä·¥á·¥Ä·¥Ö s·¥õ·¥Ä·¥õ·¥ús ·¥è…¥
‚îÉ   ‚îó 3.2 üëÅ‚ùå ·¥Ä·¥ú·¥õ·¥è  Ä·¥á·¥Ä·¥Ö s·¥õ·¥Ä·¥õ·¥ús ·¥è“ì“ì

‚î£‚îÅ *·¥Ä·¥ú·¥õ·¥è ·¥õ è·¥ò…™…¥…¢* ‚§µÔ∏è
‚îÉ   ‚î£ 4.1 üìù ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä·¥ú·¥õ·¥è ·¥õ è·¥ò…™…¥…¢
‚îÉ   ‚îó 4.2 üìù‚ùå ·¥Ö·¥á·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä·¥ú·¥õ·¥è ·¥õ è·¥ò…™…¥…¢

‚î£‚îÅ *·¥Ä·¥ú·¥õ·¥è s·¥õ…™·¥Ñ·¥ã·¥á Ä* ‚§µÔ∏è
‚îÉ   ‚î£ 5.1 üéâ ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä·¥ú·¥õ·¥è s·¥õ…™·¥Ñ·¥ã·¥á Ä
‚îÉ   ‚îó 5.2 üéâ‚ùå ·¥Ö·¥á·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä·¥ú·¥õ·¥è s·¥õ…™·¥Ñ·¥ã·¥á Ä

‚î£‚îÅ *·¥Ä…¥·¥õ…™  ô·¥Ä·¥Ö* ‚§µÔ∏è
‚îÉ   ‚î£ 6.1 üö´ ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä…¥·¥õ…™  ô·¥Ä·¥Ö
‚îÉ   ‚îó 6.2 üö´‚ùå ·¥Ö·¥á·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä…¥·¥õ…™  ô·¥Ä·¥Ö

‚î£‚îÅ *·¥Ä·¥ú·¥õ·¥è  Ä·¥á·¥ò ü è* ‚§µÔ∏è
‚îÉ   ‚î£ 7.1 üí¨ ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä·¥ú·¥õ·¥è  Ä·¥á·¥ò ü è
‚îÉ   ‚îó 7.2 üí¨‚ùå ·¥Ö·¥á·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä·¥ú·¥õ·¥è  Ä·¥á·¥ò ü è

‚î£‚îÅ *·¥Ä·¥ú·¥õ·¥è  Ä·¥á·¥Ñ·¥è Ä·¥Ö…™…¥…¢* ‚§µÔ∏è
‚îÉ   ‚î£ 8.1 üé• ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä·¥ú·¥õ·¥è  Ä·¥á·¥Ñ·¥è Ä·¥Ö…™…¥…¢
‚îÉ   ‚îó 8.2 üé•‚ùå ·¥Ö·¥á·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä·¥ú·¥õ·¥è  Ä·¥á·¥Ñ·¥è Ä·¥Ö…™…¥…¢

‚î£‚îÅ *·¥Ä ü·¥°·¥Ä ès ·¥è…¥ ü…™…¥·¥á* ‚§µÔ∏è
‚îÉ   ‚î£ 9.1 üåê ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä ü·¥°·¥Ä ès ·¥è…¥ ü…™…¥·¥á
‚îÉ   ‚îó 9.2 üåê‚ùå ·¥Ö·¥á·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä ü·¥°·¥Ä ès ·¥è…¥ ü…™…¥·¥á

‚î£‚îÅ *·¥Ä…¥·¥õ…™  ü…™…¥·¥ã* ‚§µÔ∏è
‚îÉ   ‚î£ 10.1 üîó ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä…¥·¥õ…™  ü…™…¥·¥ã
‚îÉ   ‚îó 10.2 üîó‚ùå ·¥Ö·¥á·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á ·¥Ä…¥·¥õ…™  ü…™…¥·¥ã
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`;

        const vv = await conn.sendMessage(from, { 
            image: { url: "https://files.catbox.moe/w3ir6e.jpg" }, // Ici, l'utilisateur peut changer l'URL directement
            caption: desc
        }, { quoted: mek });

        conn.ev.on('messages.upsert', async (msgUpdate) => {
            const msg = msgUpdate.messages[0];
            if (!msg.message || !msg.message.extendedTextMessage) return;

            const selectedOption = msg.message.extendedTextMessage.text.trim();

            if (msg.message.extendedTextMessage.contextInfo && msg.message.extendedTextMessage.contextInfo.stanzaId === vv.key.id) {
                switch (selectedOption) {
                    case '1.1':
                        reply(".update MODE:public" );
                        reply(".restart");
                        break;
                    case '1.2':               
                        reply(".update MODE:private");
                        reply(".restart");
                        break;
                    case '2.1':     
                        reply(".update AUTO_VOICE:true");
                        reply(".restart");
                        break;
                    case '2.2':     
                        reply(".update AUTO_VOICE:false");
                        reply(".restart");
                        break;
                    case '3.1':    
                        reply(".update AUTO_READ_STATUS:true");
                        reply(".restart");
                        break;
                    case '3.2':    
                        reply(".update AUTO_READ_STATUS:false");
                        reply(".restart");
                        break;
                    case '4.1': 
                        reply(".update FAKE_TYPING:true");
                        reply(".restart");
                        break;
                    case '4.2': 
                        reply(".update FAKE_TYPING:false");
                        reply(".restart");
                        break;
                    case '5.1':      
                        reply(".update AUTO_STICKER:true");
                        reply(".restart");
                        break;
                    case '5.2':   
                        reply(".update AUTO_STICKER:false");
                        reply(".restart");
                        break;
                    case '6.1': 
                        reply(".update ANTI_BAD:true");
                        reply(".restart");
                        break;
                    case '6.2':   
                        reply(".update ANTI_BAD:false");
                        reply(".restart");
                        break;
                    case '7.1': 
                        reply(".update AUTO_REPLY:true");
                        reply(".restart");
                        break;
                    case '7.2':   
                        reply(".update AUTO_REPLY:false");
                        reply(".restart");
                        break;
                    case '8.1': 
                        reply(".update FAKE_RECORDING:true");
                        reply(".restart");
                        break;
                    case '8.2':   
                        reply(".update FAKE_RECORDING:false");
                        reply(".restart");
                        break;
                    case '9.1': 
                        reply(".update ALWAYS_ONLINE:true");
                        reply(".restart");
                        break;
                    case '9.2':   
                        reply(".update ALWAYS_ONLINE:false");
                        reply(".restart");
                        break;
                    case '10.1': 
                        reply(".update ANTI_LINK:true");
                        reply(".restart");
                        break;
                    case '10.2':   
                        reply(".update ANTI_LINK:false");
                        reply(".restart");
                        break;
                    default:
                        reply("*_…™…¥·¥†·¥Ä ü…™·¥Ö ·¥è·¥ò·¥õ…™·¥è…¥. ·¥ò ü·¥á·¥Äs·¥á s·¥á ü·¥á·¥Ñ·¥õ ·¥Ä ·¥†·¥Ä ü…™·¥Ö ·¥è·¥ò·¥õ…™·¥è…¥üî¥_*");
                }

            }
        });

    } catch (e) {
        console.error(e);
        await conn.sendMessage(from, { react: { text: '‚ùå', key: mek.key } })
        reply('An error occurred while processing your request.');
    }
});